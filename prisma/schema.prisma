// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  // url      = env("DATABASE_URL")
  provider = "sqlite"
  url      = "file:./dev.db"
}

// enum Categorie {
//   AIDE
//   TRAVAUX
//   STAGE
// }

model StripeVerificationToken {
  id         String   @id @unique @default(uuid())
  user_id    String   @unique
  created_at DateTime @default(now())
}

model Job {
  id          String   @id @unique @default(uuid())
  created_at  DateTime @default(now())
  author      String
  title       String
  description String
  // categorie Categorie
  categorie   String
  paid        Boolean  @default(false)
  completed   Boolean  @default(false)
  city        String
  address     String

  date        DateTime
  hours       Int
  Proposition Proposition[]
}

model Proposition {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())
  accepted   Boolean  @default(false)
  teen       String
  job        Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  jobId      String

  @@unique([teen, jobId])
}

model Customer {
  id         String   @id @unique
  created_at DateTime @default(now())
  teen       String
  pro        String

  @@unique([teen, pro])
}


// datasource db {
//   provider = "mongodb"
//   url      = "mongodb://<username>:<password>@<host>:<port>/<database>"
// }

// generator client {
//   provider = "prisma-client-js"
// }

// // ... rest of your schema (models) ...

// model StripeVerificationToken {
//   id         ObjectId  @id @unique  // Remove @default(uuid())
//   user_id    String   @unique
//   created_at DateTime @default(now())
// }

// model Job {
//   id          ObjectId  @id @unique  // Remove @default(uuid())
//   created_at  DateTime @default(now())
//   author      String
//   title       String
//   description String
//   categorie   String
//   paid        Boolean  @default(false)
//   completed   Boolean  @default(false)
//   city        String
//   address     String

//   date        DateTime
//   hours       Int
//   Proposition Proposition[]
// }

// model Proposition {
//   id         ObjectId  @id @unique  // Remove @default(uuid())
//   created_at DateTime @default(now())
//   accepted   Boolean  @default(false)
//   teen       String
//   job        Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
//   jobId      String

//   @@unique([teen, jobId])
// }

// model Customer {
//   id         ObjectId  @id @unique  // Remove @default(uuid())
//   created_at DateTime @default(now())
//   teen       String
//   pro        String

//   @@unique([teen, pro])
// }
